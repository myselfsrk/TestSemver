pipeline {
    agent any

    parameters {
        choice(name: 'BUMP_TYPE', choices: ['major', 'minor', 'patch'], description: 'Which version bump do you want to perform?')
    }

    stages {
        stage('Major') {
            when {
                expression { params.BUMP_TYPE == 'major' }
            }
            steps {
                script {
                    def currentVersion = readFile('Version').trim()
                    def newVersion = sh(script: "semver-tool bump major ${currentVersion}", returnStdout: true).trim()
                    writeFile(file: 'Version', text: newVersion)
                    echo "Bumped major version to ${newVersion}"
                }
            }
        }
        
        stage('Minor') {
            when {
                expression { params.BUMP_TYPE == 'minor' }
            }
            steps {
                script {
                    def currentVersion = readFile('Version').trim()
                    def newVersion = sh(script: "semver-tool bump minor ${currentVersion}", returnStdout: true).trim()
                    writeFile(file: 'Version', text: newVersion)
                    echo "Bumped minor version to ${newVersion}"
                }
            }
        }

        stage('Patch') {
            when {
                expression { params.BUMP_TYPE == 'patch' }
            }
            steps {
                script {
                    def currentVersion = readFile('Version').trim()
                    def newVersion = sh(script: "semver-tool bump patch ${currentVersion}", returnStdout: true).trim()
                    writeFile(file: 'Version', text: newVersion)
                    echo "Bumped patch version to ${newVersion}"
                }
            }
        }
    }
}

